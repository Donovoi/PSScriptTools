examples:
- name: Example 1
  preCode: ''
  code: >-
    PS C:\> $VerbosePreference= "continue"

    PS C:\> $log = New-CustomFileName ".\VerboseLog_%time.txt"

    PS C:\> Write-Detail "This is a verbose log test" | Out-VerboseTee -path $log

    PS C:\> Get-Content $log

    11/29/2017 08:21:31:0704 [PROCESS] This is a verbose log test

    PS C:\> $verbosePreference = "silentlyContinue"
  postCode: Normally you would use this command inside a function or script, but you can run it from the console if you want to understand how it works.
inputs:
- type: System.Object
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Out-VerboseTee.md
  text: 'Online Version:'
- href: ''
  text: Write-Verbose
- href: ''
  text: Write-Detail
module:
  name: PSScriptTools
name: Out-VerboseTee
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Append
  aliases: []
  defaultValue: None
  description: Append to the specified text file.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Encoding
  aliases: []
  defaultValue: None
  description: Specify a file encoding.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: Encoding
outputs:
- type: System.Object
  description: ''
requiredParameters:
- name: Path
  aliases: []
  defaultValue: None
  description: The path for the output file.
  parameterValueGroup: []
  pipelineInput: False
  position: 0
  type: String
- name: Value
  aliases: []
  defaultValue: None
  description: The message to be displayed as a verbose message and saved to the file.
  parameterValueGroup: []
  pipelineInput: True (ByValue)
  position: Named
  type: Object
remarks: >-
  This command is intended to let you see your verbose output and write the verbose messages to a log file. It will only work if the verbose pipeline is enabled, usually when your command is run with -Verbose. This function is designed to be used within your scripts and functions. You either have to hard code a file name or find some other way to define it in your function or control script. You could pass a value as a parameter or set it as a PSDefaultParameterValue.

  This command has an alias of Tee-Verbose.

  You might use it like this in a script.

  Begin {

      $log = New-RandomFilename -useTemp -extension log

      Write-Detail "Starting $($myinvocation.mycommand)" -Prefix begin | Tee-Verbose $log

      Write-Detail "Logging verbose output to $log" -prefix begin | Tee-Verbose -append

      Write-Detail "Initializing data array" -Prefix begin | Tee-Verbose $log -append

      $data = @()

  } #begin

  When the command is run with -Verbose you will see the verbose output and it will be saved to the specified log file.
summary: Write to the Verbose stream and a file.
syntaxes:
- parameters:
  - Path
  - Append
  - Encoding
  - Value
