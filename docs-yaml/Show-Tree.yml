examples:
- name: EXAMPLE 1
  preCode: ''
  code: >-
    PS C:\> Show-Tree C:\Work -Depth 2



    C:\work

    +--A

    |  \--B

    +--dnssuffix

    |  +--docs

    |  +--en-us

    |  \--images

    +--gpo

    |  +--{65D9E940-AAD4-4508-A199-86EAE4E9E535}

    |  \--{7E7F01CE-6889-44B0-9D03-818F8284EDE0}

    +--installers

    +--remoteop

    |  \--archive

    +--test files

    \--tryme

       +--.vscode

       +--docs

       +--en-us

       \--test
  postCode: Shows the directory tree structure, recursing down two levels.
- name: EXAMPLE 2
  preCode: ''
  code: >-
    PS C:\> Show-Tree HKLM:\SOFTWARE\Microsoft\.NETFramework -Depth 2 -ShowProperty



    HKLM:\SOFTWARE\Microsoft\.NETFramework

    +--Property: Enable64Bit = 1

    +--Property: InstallRoot = C:\Windows\Microsoft.NET\Framework64\

    +--Property: UseRyuJIT = 1

    +--Property: DbgManagedDebugger = "C:\WINDOWS\system32\vsjitdebugger.exe" PID %d APPDOM %d EXTEXT "%s" EVTHDL %d

    +--Property: DbgJITDebugLaunchSetting = 16

    +--Advertised

    |  +--Policy

    |  \--v2.0.50727

    +--AssemblyFolders

    |  +--ADOMD.Client 14.0

    |  |  \--Property: (default) = C:\Program Files\Microsoft.NET\ADOMD.NET\140\

    |  +--Microsoft .NET Framework 3.5 Reference Assemblies

    |  |  \--Property: (default) = C:\Program Files\Reference Assemblies\Microsoft\Framework\v3.5\

    |  +--SQL Server Assemblies 140

    |  |  \--Property: (default) = C:\Program Files\Microsoft SQL Server\140\SDK\Assemblies\

    |  +--v3.0

    |  |  +--Property: <IncludeDotNet2Assemblies> = 1

    |  |  \--Property: All Assemblies In = C:\Program Files\Reference Assemblies\Microsoft\Framework\v3.0\

    |  \--v3.5

    |     +--Property: <IncludeDotNet2Assemblies> = 1

    |     \--Property: All Assemblies In = C:\Program Files\Reference Assemblies\Microsoft\Framework\v3.5\

    +--NGen

    |  \--Policy

    +--NGenQueue

    |  +--WIN32

    |  \--WIN64

    ...
  postCode: Shows the hierarchy of registry keys and values (-ShowProperty), recursing down two levels.
- name: EXAMPLE 3
  preCode: ''
  code: >-
    PS C:\> Show-Tree.ps1 WSMan: -ShowItem



    WSMan:\

    \--localhost

       +--MaxEnvelopeSizekb

       +--MaxTimeoutms

       +--MaxBatchItems

       +--MaxProviderRequests

       +--Client

       |  +--NetworkDelayms

       |  +--URLPrefix

       |  +--AllowUnencrypted

       |  +--Auth

       |  |  +--Basic

       |  |  +--Digest

       |  |  +--Kerberos

       |  |  +--Negotiate

       |  |  +--Certificate

       |  |  \--CredSSP

       |  +--DefaultPorts

       |  |  +--HTTP

       |  |  \--HTTPS

       |  \--TrustedHosts

       +--Service

       |  +--RootSDDL

       |  +--MaxConcurrentOperations

       |  +--MaxConcurrentOperationsPerUser

       |  +--EnumerationTimeoutms

       ...
  postCode: 'Shows all the containers and items in the WSMan: drive.'
inputs:
- type: System.String
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Show-Tree.md
  text: 'Online Version:'
- href: ''
  text: tree.com
- href: ''
  text: Get-ChildItem
module:
  name: PSScriptTools
name: Show-Tree
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Path
  aliases: []
  defaultValue: current location
  description: The path to the root of the tree that will be shown.
  parameterValueGroup: []
  pipelineInput: True (ByPropertyName, ByValue)
  position: 1
  type: String[]
- name: LiteralPath
  aliases:
  - PSPath
  defaultValue: None
  description: Use a literal path value.
  parameterValueGroup: []
  pipelineInput: True (ByPropertyName)
  position: 1
  type: String[]
- name: Depth
  aliases: []
  defaultValue: 2147483647
  description: Specifies how many levels of the specified path are recursed and shown.
  parameterValueGroup: []
  pipelineInput: False
  position: 2
  type: Int32
- name: IndentSize
  aliases: []
  defaultValue: 3
  description: The size of the indent per level. The default is 3. Minimum value is 1. You shouldn't have to modify this parameter.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: Int32
- name: ShowItem
  aliases: []
  defaultValue: False
  description: Shows the items in each container or folder.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: ShowProperty
  aliases: []
  defaultValue: False
  description: Shows the properties on containers and items (if -ShowItem is specified).
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
outputs:
- type: System.String
  description: ''
requiredParameters: []
remarks: >-
  Shows the specified path as a graphical tree in the console. This is intended as PowerShell alternative to the tree DOS command. This function should work for any type of PowerShell provider and can be used to explore providers used for configuration like the WSMan provider or the registry. Currently, this will not work with any PSDrives created with the Certificate provider.

  By default, the output will only show directory or equivalent structures. But you can opt to include items well as item details.

  It should work cross-platform.

  Note: This is an update to an older function in my library. I seem to recall I found the original code somewhere online, perhaps from someone like Lee Holmes. Sadly, I neglected to record the source.
summary: Shows the specified path as a tree.
syntaxes:
- parameterValueGroup: Path
  parameters:
  - Path
  - Depth
  - IndentSize
  - ShowItem
  - ShowProperty
- parameterValueGroup: LiteralPath
  parameters:
  - LiteralPath
  - Depth
  - IndentSize
  - ShowItem
  - ShowProperty
