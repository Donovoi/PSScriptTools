examples:
- name: EXAMPLE 1
  preCode: ''
  code: >-
    PS C:\> add-border "PowerShell Wins!"



    ********************

    * PowerShell Wins! *

    ********************
  postCode: ''
- name: EXAMPLE 2
  preCode: ''
  code: >-
    PS C:\> add-border "PowerShell Wins!" -tab 1



         ********************

         * PowerShell Wins! *

         ********************
  postCode: Note that this EXAMPLE may not format properly in the console.
- name: EXAMPLE 3
  preCode: ''
  code: >-
    PS C:\> add-border "PowerShell Wins!" -character "-" -insertBlanks



    --------------------

    -                  -

    - PowerShell Wins! -

    -                  -

    --------------------
  postCode: ''
- name: EXAMPLE 4
  preCode: ''
  code: >-
    PS C:\> add-border -textblock (get-service win* | out-string).trim()



    **********************************************************************

    * Status   Name               DisplayName                            *

    * ------   ----               -----------                            *

    * Stopped  WinDefend          Windows Defender Antivirus Service     *

    * Running  WinHttpAutoProx... WinHTTP Web Proxy Auto-Discovery Se... *

    * Running  Winmgmt            Windows Management Instrumentation     *

    * Stopped  WinRM              Windows Remote Management (WS-Manag... *

    **********************************************************************
  postCode: Create a border around the output of a Get-Service command.
inputs:
- type: None
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Add-Border.md
  text: 'Online Version:'
module:
  name: PSScriptTools
name: Add-Border
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Character
  aliases: []
  defaultValue: '*'
  description: The character to use for the border. It must be a single character.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: String
- name: InsertBlanks
  aliases: []
  defaultValue: False
  description: Insert blank lines before and after the text. The default behavior is to create a border box close to the text. See examples.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Tab
  aliases: []
  defaultValue: 0
  description: Insert X number of tabs.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: Int32
outputs:
- type: System.String
  description: ''
requiredParameters:
- name: Text
  aliases: []
  defaultValue: None
  description: A single line of text that will be wrapped in a border.
  parameterValueGroup: []
  pipelineInput: True (ByValue)
  position: 1
  type: String
- name: TextBlock
  aliases: []
  defaultValue: None
  description: A multi-line block of text. You might want to trim blank lines from the beginning, end or both.
  parameterValueGroup: []
  pipelineInput: False
  position: 1
  type: String[]
remarks: This command will create a character or text based border around a line of text. You might use this to create a formatted text report or to improve the display of information to the screen.
summary: Create a text border around a string.
syntaxes:
- parameterValueGroup: single
  parameters:
  - Text
  - Character
  - InsertBlanks
  - Tab
- parameterValueGroup: block
  parameters:
  - TextBlock
  - Character
  - InsertBlanks
  - Tab
