examples:
- name: Example 1
  preCode: ''
  code: >-
    PS C:\> Convert-CommandtoHashtable -Text "get-eventlog -listlog -computername a,b,c,d -erroraction stop"



    $paramHash = @{

      listlog = $True

       computername = "a","b","c","d"

       erroraction = "stop"

    }



    Get-EventLog @paramHash
  postCode: ''
inputs:
- type: None
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Convert-CommandtoHashtable.md
  text: 'Online Version:'
- href: ''
  text: Convert-HashTableToCode
module:
  name: PSScriptTools
name: Convert-CommandtoHashtable
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters: []
outputs:
- type: '[Hashtable]'
  description: ''
requiredParameters:
- name: Text
  aliases: []
  defaultValue: None
  description: A PowerShell expression, preferably with named parameters.
  parameterValueGroup: []
  pipelineInput: False
  position: 0
  type: String
remarks: This command is intended to convert a long PowerShell expression with named parameters into a splatting alternative.
summary: Convert a PowerShell expression into a hashtable.
syntaxes:
- parameters:
  - Text
