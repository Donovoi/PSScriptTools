examples:
- name: EXAMPLE 1
  preCode: ''
  code: >-
    PS C:\>Get-WindowsVersion



    ProductName    EditionID    Build     InstalledUTC          Computername

    -----------    ---------    -----     ------------          ------------

    Windows 10 Pro Professional 17763.253 12/17/2018 2:18:37 PM BOVINE320
  postCode: Query the local host.
- name: EXAMPLE 2
  preCode: ''
  code: >-
    PS C:\> get-windowsversion -Computername srv1,srv2,win10 -Credential company\artd



    ProductName                   EditionID          Build      InstalledUTC          Computername

    -----------                   ---------          -----      ------------          ------------

    Windows Server 2016 Standard  ServerStandardEval 14393.2273 12/26/2018 4:08:07 PM SRV2

    Windows Server 2016 Standard  ServerStandardEval 14393.2273 12/26/2018 4:07:25 PM SRV1

    Windows 10 Enterprise Evaluat EnterpriseEval     15063.1418 12/26/2018 4:08:11 PM WIN10
  postCode: Get windows version information from remote computers using an alternate credential.
inputs:
- type: System.String
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Get-WindowsVersion.md
  text: 'Online Version:'
- href: ''
  text: WinVer.exe
- href: ''
  text: Invoke-Command
module:
  name: PSScriptTools
name: Get-WindowsVersion
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Computername
  aliases: []
  defaultValue: $env:COMPUTERNAME
  description: >-
    Specifies the computers on which the command runs. The default is the local computer.

    When you use the ComputerName parameter, Windows PowerShell creates a temporary connection that is used only to run the specified command and is then closed. If you need a persistent connection, use the Session parameter.

    Type the NETBIOS name, IP address, or fully qualified domain name of one or more computers in a comma-separated list. To specify the local computer, type the computer name, localhost, or a dot (.).

    To use an IP address in the value of ComputerName , the command must include the Credential parameter. Also, the computer must be configured for HTTPS transport or the IP address of the remote computer must be included in the WinRM TrustedHosts list on the local computer. For instructions for adding a computer name to the TrustedHosts list, see "How to Add a Computer to the Trusted Host List" in about_Remote_Troubleshooting.

    On Windows Vista and later versions of the Windows operating system, to include the local computer in the value of ComputerName , you must open Windows PowerShell by using the Run as administrator option.
  parameterValueGroup: []
  pipelineInput: True (ByPropertyName, ByValue)
  position: 1
  type: String[]
- name: Credential
  aliases: []
  defaultValue: None
  description: >-
    Specifies a user account that has permission to perform this action. The default is the current user.

    Type a user name, such as User01 or Domain01\User01. Or, enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, this cmdlet prompts you for a password.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: PSCredential
- name: UseSSL
  aliases: []
  defaultValue: False
  description: >-
    Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used.

    WS-Management encrypts all Windows PowerShell content transmitted over the network. The UseSSL parameter is an additional protection that sends the data across an HTTPS, instead of HTTP.

    If you use this parameter, but SSL is not available on the port that is used for the command, the command fails.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: ThrottleLimit
  aliases: []
  defaultValue: 0
  description: >-
    Specifies the maximum number of concurrent connections that can be established to run this command. If you omit this parameter or enter a value of 0, the default value, 32, is used.

    The throttle limit applies only to the current command, not to the session or to the computer.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: Int32
- name: Authentication
  aliases: []
  defaultValue: Default
  description: >-
    Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:

    - Default

    - Basic

    - Credssp

    - Digest

    - Kerberos

    - Negotiate

    - NegotiateWithImplicitCredential



    The default value is Default.

    CredSSP authentication is available only in Windows Vista, Windows Server 2008, and later versions of the Windows operating system.

    For information about the values of this parameter, see the description of the AuthenticationMechanismEnumeration (http://go.microsoft.com/fwlink/?LinkID=144382) in theMicrosoft Developer Network (MSDN) library.

    CAUTION: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: String
outputs:
- type: WindowsVersion
  description: ''
requiredParameters: []
remarks: This is a PowerShell version of the winver.exe utility. This command uses PowerShell remoting to query the registry on a remote machine to retrieve Windows version information. The parameters are the same as in Invoke-Command.
summary: Get Windows version information
syntaxes:
- parameters:
  - Computername
  - Credential
  - UseSSL
  - ThrottleLimit
  - Authentication
