examples:
- name: EXAMPLE 1
  preCode: ''
  code: >-
    PS C:\> "P@ssw0rd" | format-string -Reverse



    dr0wss@P
  postCode: ''
- name: EXAMPLE 2
  preCode: ''
  code: >-
    PS C:\> "P@ssw0rd" | format-string -Reverse -Randomize



    rs0Pd@ws
  postCode: ''
- name: EXAMPLE 3
  preCode: ''
  code: >-
    PS C:\> $env:computername | format-string -Case Lower



    win81-ent-01
  postCode: ''
- name: EXAMPLE 4
  preCode: ''
  code: >-
    PS C:\> format-string "p*wer2she!!" -Case Alternate



    P*WeR2ShE!!
  postCode: ''
- name: EXAMPLE 5
  preCode: ''
  code: >-
    PS C:\> format-string "alphabet" -Randomize -Replace @{a="@";e=3} -Case Alternate



    3bPl@tH@
  postCode: ''
- name: EXAMPLE 6
  preCode: ''
  code: >-
    PS C:\> "pOWERSHELL" | Format-string -Case Toggle



    Powershell
  postCode: ''
inputs:
- type: System.String
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Format-String.md
  text: 'Online Version:'
- href: ./Format-Value.md
  text: Format-Value
- href: ./Format-Percent.md
  text: Format-Percent
module:
  name: PSScriptTools
name: Format-String
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Reverse
  aliases: []
  defaultValue: False
  description: Reverse the text string.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Case
  aliases: []
  defaultValue: None
  description: >-
    Valid values are Upper, Lower, Proper, Alternate, and Toggle.

    Proper case will capitalize the first letter of the string.

    Alternate case will alternate between upper and lower case, starting with upper case, e.g. PoWeRsHeLl

    Toggle case will make upper case lower and vice versa, e.g. Powershell -> pOWERSHELL
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: String
- name: Replace
  aliases: []
  defaultValue: None
  description: Specify a hashtable of replacement values. The hashtable key is the string you want to replace and the value is the replacement (see examples). Replacement keys are CASE SENSITIVE.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: Hashtable
- name: Randomize
  aliases: []
  defaultValue: False
  description: Re-arrange the text in a random order.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
outputs:
- type: System.String
  description: ''
requiredParameters:
- name: Text
  aliases: []
  defaultValue: None
  description: Any string you want to format.
  parameterValueGroup: []
  pipelineInput: True (ByValue)
  position: 1
  type: String
remarks: >-
  Use this command to apply different types of formatting to strings. You can apply multiple transformations.

  They are applied in this order:

  1) Reverse 2) Randomization 3) Replace 4) Case
summary: Options for formatting strings.
syntaxes:
- parameters:
  - Text
  - Reverse
  - Case
  - Replace
  - Randomize
