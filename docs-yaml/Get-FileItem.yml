examples:
- name: EXAMPLE 1
  preCode: ''
  code: >-
    PS C:\> Get-Fileitem notepad.exe



    C:\Windows\system32\notepad.exe

    C:\Windows\notepad.exe
  postCode: Find notepad.exe in %path% and return the full file name. This is the default behavior.
- name: EXAMPLE 2
  preCode: ''
  code: >-
    PS C:\> PSWhere calculator.exe -quiet



    False
  postCode: Search for calculator.exe and return $True if found. This command is using the PSWhere alias.
- name: EXAMPLE 3
  preCode: ''
  code: >-
    PS C:\> Get-FileItem "^\d+\S+\.txt" -Regex -path c:\scripts -full



    Directory: C:\scripts





    Mode                LastWriteTime     Length Name

    ----                -------------     ------ ----

    -a---         12/5/2007   2:19 PM      30146 1000FemaleNames.txt

    -a---         12/5/2007   2:19 PM      29618 1000MaleNames.txt

    -a---          6/2/2010  11:02 AM      31206 1000names.txt

    -a---          6/3/2010   8:52 AM       3154 100names.txt

    -a---         4/13/2012  10:27 AM       3781 13ScriptBlocks-v2.txt

    -a---         8/13/2010  10:41 AM       3958 13ScriptBlocks.txt

    -a---          2/7/2011   1:37 PM      78542 2500names.txt

    -a---          2/8/2011   9:43 AM     157396 5000names.txt
  postCode: Find all TXT files in C:\Scripts that start with a number and display full file information.
inputs:
- type: Strings
  description: ''
links:
- href: https://github.com/jdhitsolutions/PSScriptTools/blob/master/docs/Get-FileItem.md
  text: 'Online Version:'
- href: ''
  text: Get-ChildItem
- href: ''
  text: Where.exe
module:
  name: PSScriptTools
name: Get-FileItem
notes: 'Learn more about PowerShell: http://jdhitsolutions.com/blog/essential-powershell-resources/'
optionalParameters:
- name: Regex
  aliases: []
  defaultValue: False
  description: Indicates that the pattern is a regular expression.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Path
  aliases: []
  defaultValue: None
  description: The folders to search other than %PATH%.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: String[]
- name: Recurse
  aliases: []
  defaultValue: False
  description: Used with -Path to indicate a recursive search.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Full
  aliases: []
  defaultValue: False
  description: Write the full file object to the pipeline. The default is just the full name.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: Quiet
  aliases: []
  defaultValue: False
  description: Returns True if a match is made. This parameter will override -Full.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
- name: First
  aliases: []
  defaultValue: False
  description: Stop searching after the pattern is found. Don't search any more paths.
  parameterValueGroup: []
  pipelineInput: False
  position: Named
  type: SwitchParameter
outputs:
- type: String, Boolean or File
  description: ''
requiredParameters:
- name: Pattern
  aliases: []
  defaultValue: None
  description: The name of the file to find. Separate multiple entries with a comma. Wildcards are allowed. You can also specify a regular expression pattern by including the -REGEX parameter.
  parameterValueGroup: []
  pipelineInput: False
  position: 1
  type: String[]
remarks: This is an enhanced, PowerShell version of the WHERE command from the traditional CLI which will find files in %PATH% that match a particular pattern.
summary: A PowerShell version of the Where CLI command
syntaxes:
- parameterValueGroup: Path
  parameters:
  - Pattern
  - Regex
  - Path
  - Recurse
  - Full
  - Quiet
  - First
